优化后的协方差 具体是什么 但是协方差只是以信息矩阵的形式负责指导参与优化的程度

iku零偏建模为维纳过程，初始时刻采样均值为0，任意时间点均值也为零，协方差随时间增大，在优化过程中递推函数，或者叫运动方程中也认为其不变，所以优化过程会尽量维持其不变，同时受imu预积分参与优化的影响，收敛指的是什么意思？本身它应该收敛吗？是指短时间内几乎维持不变吗？和local map优化的关系？滤波过程滤波后的协方差会按照贝叶斯公式取一个结果，优化呢？
优化后的协方差和滤波方式在线性系统上是一致的，可以通过推导过程看出来，参考机器人学中的状态估计3.1节。 对应中文版书籍中45页
对于非线性系统，最小二乘的解会取到一个“均值”，和概率最大的点不一致，好像叫做“模”
最小二乘法对状态变量的高斯估计的协方差矩阵为P^(hat) = H^T W^(-1) H，H为转移矩阵和观测矩阵组合出的块矩阵，W为初始状态的先验协方差矩阵、过程噪声协方差矩阵、测量噪声协方差矩阵组合出的块矩阵。对应中文版书籍37页。

滤波过程不收敛？
如果没有轮速计，例如用lidar或者IMU，那么运动模型是近似假设出来的，可能不符合实际情况，例如假设短时间内为匀速直线运动，或者中值积分，总之是一个插值方式，本质上还是批量和递归的区别

lio下imu ba 零偏可观性或者如果提升 ba 零偏这个研究性课题
avp那边为了解决这个问题是强行使用了一个 重力观测拉住
如果能从原理上探索出来 为什么会出现 ba不准确的原因并解决 我觉得很有意义

能用获得的信息估计出状态，就说该系统是能观的
even if you can estimate the state, some states could be highly sensitive to modelling and measurement errors
例如，对有噪声的位置信号微分会产生噪声更大的速度信号，速度测量中的小偏差会导致位置误差不断增加
trade off 测量哪些状态 估计哪些状态
通过什么方法直接或间接地测量当前IMU零偏？

陀螺仪旋转可以很容易估计出来，但是应该不给正确的零偏初始值也能收敛过来
加速度计零偏无法正确估计
李雅普诺夫稳定性

实验结果
kitti     gyro_bias initial_gyro_bias acc_bias initial_acc_bias result
0016        0               0                         0              0                   ok
0016        0.003        0.003                  0              0                   ok
0016        0.03          0.03                    0              0                   ok
0020        0.03          0.03                    0              0                   ok
0020        0.3            0.3                      0              0                   fail
0020        0               0                         0.03         0.03              ok
0020        0.05          0                         0              0                   ok but not convergence
0020        0.15          0                         0              0                   ok but not convergence
0.05和0.15之间的估计值差值也并不等于0.1，直接原因可以观察到，本身对于IMU零偏的估计就不会迅速收敛

想法：VIO中是以特征点的数据关联构造残差，LIO中构造残差的方式是点线或点面残差，不够准确，留的余地比较大
如果这个判断是正确的，那么解决方法就是利用lidar的特征点

LIO-SAM中原版imu因子图优化结果，如果速度或偏置过大还会认为优化失败，似乎就希望零偏保持不变，这样做的原因是什么？
图优化中，零偏的观测值就是0，也就是希望两帧IMU零偏的差值尽量为0，还有更好的方法吗？
要解决的问题是什么？测量的零偏不准，要让它自己能拉到正确的零偏上？

vins测试 给零偏加偏移确实会使得估计结果相差一定偏移，这能算是收敛吗？

建议：先自己多思考，看一下lio-mapping

先从原理上判断零偏的估计应该表现为什么样子，IMU零偏会直接添加在加速度和角速度的值上，而优化过程中对于零偏的处理是希望它尽量保持不变，即在整个优化系统中，各个IMU时刻状态之间的零偏差值观测值为0。
在这种情况下，假设零偏保持一个非零值不变，如果是一个批量优化的方式，提前获取了所有的信息。如果初始零偏值设置为实际零偏附近的值，并且初始时刻的零偏固定住，那么对于零偏的优化结果大概率是准确的；如果初始零偏值设置为实际零偏附近的值，并且初始时刻的零偏不固定，那么对于零偏的优化结果有可能在零空间发生漂移，就是实际的零偏的值被转移到了IMU的状态上（？）；如果初始零偏值设置为0，并且初始时刻的零偏固定住，那么对于零偏的优化结果应该会收敛在0到真实零偏值之间的一个结果（确定会收敛吗？）；如果初始零偏值设置为0，并且初始零偏不固定，那么对于零偏的优化结果大概率是不准确的。因为本身零偏的优化结果就会在零空间发生漂移，何况初始值就不在真实值附近，大概率不会收敛在准确的真实值。

再谈是否一定会收敛，LIO系统一定是一个非线性系统，那么就不能保证优化结果一定会收敛，也不能保证一定会收敛到真实值附近。

把零偏前向传播更新？

批量式方法能够遍历整条轨迹，而递归方法一次只能在一个时间步长上进行迭代，这意味着它们会在大多数问题上收敛于不同的答案。

现象：对于同一个数据集序列，强制给IMU添加偏移量，优化过程中对IMU零偏的估计基本是同一个曲线形状，VINS的加速度计yz轴、LIO-SAM的加速度计xy轴可以明显看出阶段性的收敛，即保持平稳一段时间，然后短时间内快速增大；VINS的加速度计x轴一直在增大，最后似乎收敛了；而LIO-SAM的加速度计z轴大幅度来回波动。有一种可能的解释是，在曲线图上，VINS的估计值范围相对大一些，所以能说明估计的收敛性，而LIO-SAM曲线图上整个估计值范围分别是0.006和0.01范围内，实在是太小了，也就是说它能体现出来对零偏的优化值都非常微小。这也正是问题。
为什么LIO中零偏优化不动？零偏的改动在优化中占的比重过于微小？为什么比重过于微小？

对比一下VINS和LIO-SAM的图优化结构，零偏如何参与优化过程：
LIO-SAM中没隔100个激光帧，会添加一个IMU偏置、位姿、速度的先验因子，即固定一个IMU零偏、位姿、速度的先验值，但是这个值会用前一帧的值初始化。
两激光帧之间做一次优化
LIO-SAM图优化结构：预积分因子、imu偏置因子、位姿因子（lidar scan to map优化出的位姿作为固定先验），X(key)不变，X(key-1)、V(key)、V(key-1)、B(key)、B(key-1)会变
VINS中用了滑窗，failureDetection零偏三个轴的大小大于2.5会认为失败，LIO-SAM也有类似检测，默认大于1会认为失败
滑窗满了以后，滑窗内参数一起做优化
VINS图优化结构：约束：上一次边缘化的结果作为先验、IMU预积分约束、视觉重投影约束、回环约束（类似重投影约束）、
对应状态参数：时延、滑窗中所有位姿、速度、零偏、观察到该特征点的对应两个IMU帧的位姿、特征点逆深度、相机IMU外参、

所以IMU零偏优化不动的原因是LIO-SAM中仅仅只有两激光帧之间的约束，约束太少？

Lio-mapping用的是滑窗，探索一下。

一帧的点云通常还是比较稀疏的，尤其是线数比较低的点云，建立稠密局部地图可以使得特征之间的匹配更为准确。
Lio-mapping中似乎是通过采用滑窗形成了相对稠密的局部地图，通过scan to map 约束 + IMU预积分约束做LIO的紧耦合，这样做是否解决了IMU零偏优化不动的问题？
实验测试一下，也就是对Lio-mapping做同样的实验，给IMU信息加偏移，输出IMU零偏估计结果进行对比。
Lio-mapping图优化结构：激光雷达点面残差、IMU预积分残差、边缘化残差、
Lio-mapping中有Pivot Lidar Sweep，优化问题一定要有不变的先验吧？防止状态变量在零空间发生漂移，但是不要忘了Lidar的点是不优化的，而VINS中点的逆深度是优化的，这个对IMU零偏的估计有影响吗？

2024.07.22会议：
佳乘哥认为点的深度的优化、LIO-SAM仅含帧间约束很可能是实际的原因。
并提供了Lio-mapping的相关信息，相比Lio-sam会好一些，但是也不会完全收敛。
我又提出了两个可能的想法，一是点云地图可能不够致密，二是BALM的前置论文里提及的点云误差模型，佳乘哥认为关键点应该不在这里

提到俊哥有MINS的docker ubuntu18
MINS有点云、视觉特征的模拟器，佳乘哥建议多关注一下，这样可以让研究的问题更纯粹，使用的时候模拟器生成数据，改话题就可以

2024.07.23 里程计会议提到了一个想法
VIO对零偏的估计更好，在融合的时候保留VIO对零偏的估计，怎么保留？
